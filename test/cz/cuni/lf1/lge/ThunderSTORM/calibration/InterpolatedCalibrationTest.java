package cz.cuni.lf1.lge.ThunderSTORM.calibration;

import org.junit.Test;
import static org.junit.Assert.*;
import org.yaml.snakeyaml.Yaml;

/**
 *
 * @author Josef Borkovec <josef.borkovec[at]lf1.cuni.cz>
 */
public class InterpolatedCalibrationTest {

  @Test
  public void testSerialization() {
    InterpolatedCalibration calibration = new InterpolatedCalibration(Math.PI, values);
    Yaml yaml = new Yaml();
    String output = yaml.dump(calibration);
    System.out.println(output);
    
    Object loaded = yaml.load(output);
    assertTrue(loaded instanceof InterpolatedCalibration);
    InterpolatedCalibration loadedCalibration = (InterpolatedCalibration) loaded;
    assertEquals(calibration.getAngle(), loadedCalibration.getAngle(), 0.0001);
    assertArrayEquals(calibration.getValues(), loadedCalibration.getValues());
  }
  
  @Test
  public void testInterpolation(){
    InterpolatedCalibration calibration = new InterpolatedCalibration(Math.PI, values);
    assertEquals("query point: same as first row", values[0][1], calibration.getZ(values[0][0],1), 0.001);
    assertEquals("query point: same as last row", values[values.length-1][1], calibration.getZ(values[values.length-1][0],1), 0.001);
    double interpolatedValue = calibration.getZ(center(values[0][0], values[1][0]),1);
    double expectedValue = center(values[0][1],values[1][1]);
    assertEquals("query point: center between two points",expectedValue, interpolatedValue, 0.0001);
  }
  
  private double center(double v1, double v2){
    return Math.min(v1, v2) + Math.abs(v2-v1)/2;
  }
  static final double[][] values = new double[][]{
    {0.5, 221.08, 20.055},
    {0.51, 223.16, 30.728},
    {0.52, 210.29, 23.851},
    {0.53, 219.05, 34.194},
    {0.54, 201.46, 25.17},
    {0.55, 201.15, 30.06},
    {0.56, 189.19, 22.911},
    {0.57, 206.74, 43.761},
    {0.58, 214.59, 42.346},
    {0.59, 206.68, 38.512},
    {0.6, 191.78, 30.511},
    {0.61, 182.41, 27.444},
    {0.62, 176.06, 26.699},
    {0.63, 181.41, 37.654},
    {0.64, 182.3, 41.352},
    {0.65, 171.69, 34.566},
    {0.66, 167.3, 33.215},
    {0.67, 158.93, 30.678},
    {0.68, 153.97, 30.978},
    {0.69, 146.55, 28.435},
    {0.7, 139.94, 27.135},
    {0.71, 133.69, 25.241},
    {0.72, 128.07, 24.304},
    {0.73, 122.02, 22.751},
    {0.74, 116.48, 21.445},
    {0.75, 111.04, 20.202},
    {0.76, 106.07, 19.167},
    {0.77, 101.08, 18.307},
    {0.78, 96.297, 17.535},
    {0.79, 91.373, 16.636},
    {0.8, 86.762, 15.906},
    {0.81, 82.173, 15.27},
    {0.82, 77.654, 14.635},
    {0.83, 73.206, 13.903},
    {0.84, 68.795, 13.197},
    {0.85, 64.366, 12.639},
    {0.86, 59.768, 12.034},
    {0.87, 55.245, 11.322},
    {0.88, 50.977, 10.335},
    {0.89, 46.659, 9.4236},
    {0.9, 42.373, 8.5167},
    {0.91, 37.991, 7.6728},
    {0.92, 33.402, 7.2395},
    {0.93, 29.271, 6.8312},
    {0.94, 25.163, 6.3389},
    {0.95, 20.893, 5.3668},
    {0.96, 16.562, 4.15},
    {0.97, 12.301, 2.9833},
    {0.98, 8.1281, 1.9942},
    {0.99, 4.0279, 1.2478},
    {1, 0.0016331, 1.0061},
    {1.01, -3.9792, 1.3536},
    {1.02, -8.0871, 2.08},
    {1.03, -12.496, 3.2257},
    {1.04, -16.748, 4.0646},
    {1.05, -20.69, 4.9369},
    {1.06, -24.827, 5.7485},
    {1.07, -29.032, 6.2549},
    {1.08, -33.214, 7.6744},
    {1.09, -37.215, 8.6562},
    {1.1, -41.181, 9.5257},
    {1.11, -45.404, 10.572},
    {1.12, -49.737, 12.346},
    {1.13, -53.403, 13.134},
    {1.14, -57.013, 13.745},
    {1.15, -60.724, 14.686},
    {1.16, -64.783, 15.95},
    {1.17, -68.829, 17.258},
    {1.18, -73.055, 18.589},
    {1.19, -77.23, 19.625},
    {1.2, -81.29, 20.674},
    {1.21, -85.52, 21.52},
    {1.22, -89.309, 22.152},
    {1.23, -92.716, 22.828},
    {1.24, -95.708, 22.629},
    {1.25, -99.598, 24.154},
    {1.26, -103.56, 25.773},
    {1.27, -107.34, 26.819},
    {1.28, -111.18, 27.554},
    {1.29, -115.05, 28.498},
    {1.3, -119, 29.848},
    {1.31, -122.75, 30.642},
    {1.32, -126.56, 31.402},
    {1.33, -130.32, 32.499},
    {1.34, -134.05, 33.486},
    {1.35, -138, 35.045},
    {1.36, -141.59, 36.128},
    {1.37, -145.46, 37.629},
    {1.38, -149.61, 39.165},
    {1.39, -153.22, 40.951},
    {1.4, -157.63, 44.272},
    {1.41, -161.41, 45.199},
    {1.42, -159.83, 35.086},
    {1.43, -163.42, 35.815},
    {1.44, -167.13, 36.599},
    {1.45, -171.09, 37.968},
    {1.46, -175.29, 39.892},
    {1.47, -179.36, 41.192},
    {1.48, -184.63, 45.518},
    {1.49, -188.39, 45.849},
    {1.5, -188.77, 44.987},
    {1.51, -187.46, 38.502},
    {1.52, -191.85, 41.997},
    {1.53, -195.67, 43.17},
    {1.54, -193.58, 32.665},
    {1.55, -197.55, 32.999},
    {1.56, -201.45, 33.718},
    {1.57, -205.09, 34.529},
    {1.58, -209.21, 36.159},
    {1.59, -209.69, 33.992},
    {1.6, -211.13, 32.255},
    {1.61, -215.16, 33.17},
    {1.62, -218.87, 33.364},
    {1.63, -223.73, 34.591},
    {1.64, -228.62, 35.921},
    {1.65, -233.57, 37.853},
    {1.66, -241.2, 42.245},
    {1.67, -246.22, 43.498},
    {1.68, -245.36, 44.912},
    {1.69, -252.6, 47.423},
    {1.7, -249.5, 43.25}};
}